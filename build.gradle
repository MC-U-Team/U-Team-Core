plugins {
	id "net.minecraftforge.gradle"
	id "org.parchmentmc.librarian.forgegradle"
	id "info.u_team.gradle_files"
	id "me.modmuss50.mod-publish-plugin"
	id "maven-publish"
}

gradlefiles.loaderSuffix = "forge"

group = "info.u-team"
base.archivesName = gradlefiles.archivesName()
version = gradlefiles.version()

gradlefiles {
	vendor = "Team UTeam"
}

sourceSets {
	main {
		java {
			srcDirs += "src/repack/java"
		}
		resources {
			srcDirs += "src/repack/resources"
		}
	}
	test_mod {
		java
		resources
		compileClasspath += main.compileClasspath + main.output
		runtimeClasspath += main.runtimeClasspath
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
	withSourcesJar()
	withJavadocJar()
}

minecraft {
	mappings channel: config.forge.mapping_channel, version: config.forge.mapping
	
	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
	
	runs {
		client {
			workingDirectory file("run/client")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
				
				uteamtest {
					source sourceSets.test_mod
				}
			}
		}
		
		server {
			workingDirectory file("run/server")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
				
				uteamtest {
					source sourceSets.test_mod
				}
			}
		}
	}
}

tasks.register("testJar", Jar) {
	archiveClassifier = "test"
	
	from sourceSets.test_mod.output
}

tasks.register("testSourcesJar", Jar) {
	archiveClassifier = "testsources"
	
	from sourceSets.test_mod.allJava
}

reobf.create("testJar") {
	dependsOn tasks.named("reobfJar")
}

tasks.named("reobfTestJar").configure {
	libraries.from(tasks.named("reobfJar").get().input)
}

gradlefiles.allBuildingDependOn(tasks.named("reobfTestJar"), tasks.named("testSourcesJar"))

tasks.withType(Jar).configureEach { task ->
	gradlefiles.defaultJar(task)
	task.manifest {
		attributes("FMLAT": "accesstransformer.cfg")
	}
}

tasks.withType(Javadoc).configureEach { task ->
	task.options.addStringOption("Xdoclint:none", "-quiet")
}

signjar.sign(tasks.named("reobfJar"))
signjar.sign(tasks.named("reobfTestJar"))

processResources {
	doLast {
		fileTree(dir: outputs.files.asPath, include: "**/*.json").each { File file ->
			file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
		}
	}
}

repositories {
	maven {
		url = "https://maven.blamejared.com"
	}
}

dependencies {
	minecraft gradlefiles.forgeDependency()
	
	implementation fg.deobf("mezz.jei:jei_${config.minecraft.version}:${config.jei.version}")
}

publishMods {
	file = tasks.named("jar").flatMap { jar -> jar.archiveFile }
	displayName = "${config.publish.display}-Forge-${config.minecraft.version}-${project.version}"
	changelog = "[Changelog for version ${project.version}](${gradlefiles.changelogUrl()})"
	type = me.modmuss50.mpp.ReleaseType.of(config.publish.type)
	modLoaders.add("forge")
	
	curseforge {
		accessToken = defaultPropertyValue("curseforge.token")
		
		projectId = config.curse.id
		projectSlug = config.curse.slug
		minecraftVersions.add(config.minecraft.version)
		javaVersions.add(JavaVersion.VERSION_1_8)
		
		optional("jei")
	}
	
	modrinth {
		accessToken = defaultPropertyValue("modrinth.token")
		
		projectId = config.modrinth.id
		minecraftVersions.add(config.minecraft.version)
		
		optional("jei")
	}
	
	discord {
		webhookUrl = defaultPropertyValue("discord.update_webhook")
		
		username = "Mod Update"
		avatarUrl = "https://raw.githubusercontent.com/MC-U-Team/U-Team-Core/${config.github.branch}/logo.png"
		
		content = changelog.map { log -> "# ${config.publish.display} (Forge)\n" + log}
	}
}

publishing {
	repositories {
		maven {
			url "https://repo.u-team.info"
			credentials {
				username = "maven"
				password = defaultPropertyValue("maven.password")
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			artifactId project.base.archivesName.get()
			
			from gradlefiles.filteredJavaComponent()
			artifact tasks.named("testJar")
			artifact tasks.named("testSourcesJar")
			
			pom {
				name = project.base.archivesName.get()
				description = "${config.github.name}"
				url = "https://github.com/MC-U-Team/${config.github.name}"
				scm {
					url = "https://github.com/MC-U-Team/${config.github.name}"
					connection = "scm:git:git://github.com/MC-U-Team/${config.github.name}.git"
					developerConnection = "scm:git:git@github.com:MC-U-Team/${config.github.name}.git"
				}
				issueManagement {
					system = "github"
					url = "https://github.com/MC-U-Team/${config.github.name}/issues"
				}
				licenses {
					license {
						name = "Apache License 2.0"
						url = "https://github.com/MC-U-Team/${config.github.name}/blob/${config.github.branch}/LICENSE"
						distribution = "repo"
					}
				}
				developers {
					developer {
						name = "HyCraftHD"
					}
					developer {
						name = "MrTroble"
					}
				}
			}
		}
	}
}