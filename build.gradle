buildscript {
	repositories {
		maven {
			url = "https://maven.minecraftforge.net"
		}
		maven {
			url = "https://repo.u-team.info"
		}
		mavenCentral()
	}
	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
		classpath group: "info.u-team.gradle_files", name: "gradle_files", version: "2.0.4"
		classpath group: "info.u-team.curse_gradle_uploader", name: "curse_gradle_uploader", version: "1.5.1"
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "info.u_team.gradle_files"
apply plugin: "info.u_team.curse_gradle_uploader"
apply plugin: "maven-publish"

group = "info.u-team"
archivesBaseName = gradlefiles.archivesBaseName()
version = gradlefiles.version()

gradlefiles {
	vendor "Team UTeam"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
	withSourcesJar()
	withJavadocJar()
}

minecraft {
	mappings channel: config.forge.mapping_channel, version: config.forge.mapping

	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

	runs {
		client = {
			workingDirectory file("run/client")

			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}

				uteamtest {
					source sourceSets.test
				}
			}
		}
		server = {
			workingDirectory file("run/server")

			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}

				uteamtest {
					source sourceSets.test
				}
			}
		}
		data = {
			workingDirectory file("run/data")

			args "--mod", config.mod.modid
			args "--all"
			args "--output", file("src/generated/resources")
			args "--validate"
			args "--existing", file("src/main/resources")

			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
			}
		}
		data_test = {
			workingDirectory file("run/data")

			parent data // Does not work as the other args are added too...

			args "--mod", "uteamtest"
			args "--all"
			args "--output", file("src/generated_test/resources")
			args "--validate"
			args "--existing", file("src/test/resources")
			args "--existing-mod", "uteamcore"

			mods {
				uteamtest {
					source sourceSets.test
				}
			}
		}
	}
}

def testJarTask = tasks.create("testJar", Jar) {
	archiveClassifier = "test"

	from sourceSets.test.output
}

gradlefiles.createReobfJar(tasks.getByName("testJar"))

def testSourcesJarTask = tasks.create("testSourcesJar", Jar) {
	archiveClassifier = "testsources"

	from sourceSets.test.allJava
}

gradlefiles.assembleDependOn(testJarTask, testSourcesJarTask)

tasks.withType(Jar) { task ->
	gradlefiles.defaultJar(task)
}

tasks.withType(Javadoc) { task ->
	task.options.addStringOption("Xdoclint:none", "-quiet")
}

gradlefiles.signDefaultForgeJar()
gradlefiles.signJar("reobfTestJar")

processResources {
	doLast {
		fileTree(dir: outputs.files.asPath, include: "**/*.json").each { File file ->
			file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs += "src/repack/java"
			srcDirs += "src/api/java"
			srcDirs += "src/integration/java"
		}
		resources {
			srcDirs += "src/repack/resources"
			srcDirs += "src/generated/resources"
		}
	}
	test {
		java
		resources {
			srcDirs += "src/generated_test/resources"
		}
	}
}

repositories {
	maven {
		url = "https://dvs1.progwml6.com/files/maven"
	}
}

dependencies {
	minecraft gradlefiles.forgeDependency()

	compileOnly fg.deobf("mezz.jei:jei-${config.minecraft.version}:${config.jei.version}:api")
	runtimeOnly fg.deobf("mezz.jei:jei-${config.minecraft.version}:${config.jei.version}")
}

curseforge {
	apiKey = defaultPropertyValue("curseforge.token")

	project {
		id = config.curse.id
		releaseType = config.curse.type

		addGameVersion config.minecraft.version
		addGameVersion "Forge"
		addGameVersion "Java 8"

		relations {
			optionalDependency "jei"
		}

		mainArtifact(tasks.getByName("jar")) {
			displayName = "${config.curse.display}-${config.minecraft.version}-${project.version}"
			changelogType = "html"
			changelog = "<a href=\"${gradlefiles.changelogUrl()}\">Changelog of ${project.version}</a>"
		}
	}
}

publishing {
	repositories {
		maven {
			url "https://repo.u-team.info"
			credentials {
				username = "maven"
				password = defaultPropertyValue("maven.password")
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			artifactId archivesBaseName

			from components.java
			artifact tasks.getByName("testJar")
			artifact tasks.getByName("testSourcesJar")

			pom {
				name = project.archivesBaseName
				description = "${config.github.name}"
				url = "https://github.com/MC-U-Team/${config.github.name}"
				scm {
					url = "https://github.com/MC-U-Team/${config.github.name}"
					connection = "scm:git:git://github.com/MC-U-Team/${config.github.name}.git"
					developerConnection = "scm:git:git@github.com:MC-U-Team/${config.github.name}.git"
				}
				issueManagement {
					system = "github"
					url = "https://github.com/MC-U-Team/${config.github.name}/issues"
				}
				licenses {
					license {
						name = "Apache License 2.0"
						url = "https://github.com/MC-U-Team/${config.github.name}/blob/${config.github.branch}/LICENSE"
						distribution = "repo"
					}
				}
				developers {
					developer {
						name = "HyCraftHD"
					}
					developer {
						name = "MrTroble"
					}
				}
			}
		}
	}
}